package com.test.java;

public class EX05_Variable {
	
	public static void main(String[] args) {
		
	//1. 각 자료형 변수 만들기
	//2. 각 자료형 리터럴 만들기
	
	//정수형
	byte b1=10; //10=정수형 리터럴 (숫자를 있는 그대로 표기)
    int b2=127;
    int b3=-127;
    
	b1=Byte.MAX_VALUE; // JDK가 제공하는 상수(미리 만들어져있는 상수)
	b1=Byte.MIN_VALUE;	
	
	int n1;
	n1=Integer.MAX_VALUE;
	
	long l1;
	//l1 = 21000000000; The literal 21000000000 of type int is out of range
	//정수형 리터럴은 int 범위를 벗어나 표현할 수 없다. > 접미어(L) 붙이기, Long형 리터럴
	//int 범위내에서 접미어 자유롭게
    l1 = 21000000000L; 
	l1 = Long.MAX_VALUE;
	
	
	/*
	byte  b2 = 10;
	short s2 = 10;
	int   n2 = 10;
	long  l2 = 10;
	
	System.out.println(b2); 10 > byte
	System.out.println(s2);
	System.out.println(n2);
	System.out.println(l2);
	System.out.println(12); 10 > 숫자는 어떤 자료형? > int
	정수형 리터럴은 int이다. > CPU, 운영체제
	* 64bit 운영체제 > 32bit 운영체제 > 16bit 운영체제 > 8bit 운영체제 
	  -> CPU가 한번에 메모리로부터 가져와서 처리하는 데이터의 양
	  -> 프로그래밍 언어의 'int' 자료형은 운영체제의 bit와 동일
	     (byte 수가 정해진게 아니라 운영체제에 따라 변한다.)
	  -> 현재 int=32bit? 전체를 64bit로 바꾸기 어려워서 32bit로 고정
	  -> 데이터를 CPU가 바로 가져다 쓸 수 있게 하려면 데이터가 int가 되는 것
    byte b3; 1byte -> +3byte -> 4byte (호환성을 위해 남아있을 뿐)
    long l3; 8byte -> 4byte + 4byte   (호환성을 위해 남아있을 뿐)
    int  n3; 4byte -> 4byte 그대로 사용하기 때문에 제일 빠름 > 현실에선 int + 가끔식 long
	변수만 자료형이 있는게 아니라, 모든 리터럴(상수)도 자료형이 있다.
	*/
	
	//실수형 리터럴(상수)는 float인가 double인가? > double
	//실수형 float > 단정도형
	float f1 = 3.14F; //실수형 리터럴 표기법
	
	
	//실수형 double > 배정도형
	double d1 = 3.14;
	

	f1 = 123.12345678901234567890F; // 123.12346 		   출력, 소수이하 5자리
	d1 = 123.12345678901234567890D; // 123.123456789012345 출력, 소수이하 14자리
	
	f1 = 1234567890123456789F; //1.23456789E38, 1234567890000~
	d1 = 1234567890123456789D; //1.2345678E38
	
	
	/*
	정수형 리터럴은 int이다.    > CPU
	실수형 리터럴은 double이다. > 정밀도
	보통 실수형은 잘 사용 안한다. > 손실분 발생 때문에 반드시 필요한 경우나 손실분이 미미한 경우에만 사용한다.
	*/
	
	
	//문자형
	//컴파일러는 기본적으로 어떤 단어가 오면 무언가의 식별자내 예약된 키워드라고 판단한다.
	//c1=문자;(x)  c1 = '문자';(o) > ''사용
	char c1;
	c1 = 'A'; //문자형 상수(리터럴) 표기법
	c1 = '@';
	c1 = '1'; //'1'은 숫자가 아니라 문자로서의 '1'이다.
	//c1 = '홍길동'; Invalid character constant > char형은 반드시 1개의 문자만 저장할 수 있다.
	
	
	//논리형 
	//상수의 종류가 딱 2종류
	boolean flag;
	flag = true; //논리형 리터럴(true) 
	flag = false; //논리형 리터럴(false)
	
	
	}
}	


/*
원시형 ; 처음부터 제공된다
참조형 ; 
9개의 자료형 : 값형(8개) + 참조형(1개)


//문자열, String
- 추가 자료형, 참조형에 속함
- 문자들이 열을 지어 있는 형태 > 문자의 집합 > char가 여러개 모여있는 형태
String name; 첫글자 대문자 사용
name = "홍길동"; 문자열 리터럴(상수) 표기법


char   m1 = 'a';
char   m6 = '';   > 사용 불가능
char   m7 = '\0'; > 빈문자(NULL)
String m2 = "a";  > char가 0개 이상 가능
String m5 = "";   > 0개의 문자열 > 빈문자열, Empty String > 표기법만 있고 내용 없음, space 없음 주의

보통 char보다 String을 많이 사용한다.


똑같은 값을 가지는 변수 2개 필요 > 변수끼리 값을 복사할 수 있다.
int age  = 20;
int copy = 20; > 유지보수 생각했을 때 좋은 코드가 아님

int age  = 20;  변수 = 값;
int copy = age; 변수 = 변수; > 변수 = 변수가 가지는 값


연산자 : =(대입), +

int a1 = 10;
int a2 = 20;
int a3 = a1 + a2; > 30 출력, 산술 연산

String str1 = "홍길동";
String str2 = "안녕하세요.";
String str3 = str1 + str2 > 홍길동안녕하세요. 출력, 문자열 연산자 > Concat 


예제1.
a1 = 100;
a2 = 200;
a3 = a1 + a2;
화면에 출력 > 연산과정과 함께 결과를 출력하시오
100 + 200 = 300
System.out.println(" 100 + 200 = " + a3); > '문자열 + 숫자'인 경우, 문자열 연산
System.out.println(a1 + "+ 200 = 300");
System.out.println(a1 + "+" + a2 + "=" a3);

예제2.
age = 20;
안녕하세요. 저는 20살입니다.
System.out.println("안녕하세요. 저는 age살입니다.") > 식별자를 ""안에 넣으면 식별자가 아닌 그냥 문자가 된다. > 의미를 잃어버린다.
System.out.println("안녕하세요. 저는 " + age + "살입니다.")


숫자형 데이터를 저장할 변수를 만들 때 주의할 점(자료형 선택)
- 수치로서의 데이터  > 더하기 빼기 가능
- 수치가 아닌 데이터 > 문자열로 취급

1. 몸무게 > 숫자 o
int weight;
weight = 70;

2. 주민등록번호 앞자리(생년월일) > 숫자 x (수치로서의 데이터 아님)
int jumin; > 절대 금지!, 숫자가 아닌 데이터에 숫자 사용 금지 > string 사용 "951205";
jumin = 951205;
예.
2000년 태어난 아기 2000-03-07
jumin = 000307
System.out.println(jumin); > 199 출력? > 자바의 기수 표기법 때문, 8진수 00307 = 199

? 자바의 기수 표기법
- 데이터 표시는 아래와 같이 3개의 기수법을 제공한다.
- 데이터 출력은 기수법과 상관없이 항상 10진수로 출력한다.
1. 10진수 > 100   > 10   = 10
2. 8진수  > 0100  > 010  = 8 
3. 16진수 > 0x100 > 0x10 = 16

3. 상품번호  > 숫자 x (수치로서의 데이터 아님)
int productNo;
productNo = 123;
*/


/* 0307 과제 (자료형, 변수와 리터럴 연습)
 구글드라이브 - 날짜별로 폴더 - 제출
 각 자료형(9개) 별로 변수 10개 > 문장으로 출력하시오. 
 sampel 양식으로 총 90개 출력
 sample.
 1) 주변의 데이터 검색 - 나이 몸무게 키 등등 - 내 키 (180.5)
 2) 1의 데이터가 자바의 어떤 자료형에 적합한지? > 매칭 > 정수vs실수 + 길이 > double
 3) 2의 자료형으로 변수 선언하기 
    double height;
 4) 3의 변수로 데이터 대입(자료형에 맞는 리터럴 표기법)
    height = 180.5;
 5) 문장으로 만들어서 출력
    System.out.println("제 키는 + " + height + "cm입니다.") > 제 키는 180.5cm입니다.
 */
